#include <mysql.h>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
int main(int argc, char **argv)
{

	MYSQL *conn;
	int err;
	// Estructura especial para almacenar resultados de consultas 
	MYSQL_RES *resultado;
	MYSQL_ROW row;
	
	//Creamos una conexion al servidor MYSQL 
	conn = mysql_init(NULL);
	if (conn == NULL) {
		printf ("Error al crear la conexion: %u %s\n", mysql_errno(conn), mysql_error(conn));
		exit (1);
	}
	//inicializar la conexion
	conn = mysql_real_connect (conn, "localhost","root", "mysql", "Juego",0, NULL, 0);
	if (conn == NULL) {
		printf ("Error al inicializar la conexion: %u %s\n", mysql_errno(conn), mysql_error(conn));
		exit (1);
	}

	strcpy (consulta,"SELECT PARTIDA.id FROM (PARTIDA, JUGADOR) WHERE JUGADOR.nombre = (SELECT MAX(PARTIDA.duracion))");
	err=mysql_query (conn, consulta);
	if (err!=0) {
		printf ("Error al consultar datos de la base %u %s\n", mysql_errno(conn), mysql_error(conn));
		exit (1);
	}

	//recogemos el resultado de la consulta
	resultado = mysql_store_result(conn); // El resultado de la consulta se devuelve en una variable del tipo puntero a MYSQL_RES. Se trata de una tabla virtual en memoria que es la copia de la tabla real en disco.
	row = mysql_fetch_row (resultado); // Ahora obtenemos la primera fila que se almacena en una variable de tipo MYSQL_ROW.
	printf("\tConsulta realizada con exito\n");
	
	if (row == NULL)	
		printf ("No se han obtenido datos en la consulta\n");
	else
		printf ("La partida que mas ha durado, tiene el siguiente id: %s\n", row[0]);
	
	mysql_close (conn);
	exit(0);
	}
